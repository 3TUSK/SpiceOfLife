buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

minecraft {
    version = "1.7.2-10.12.1.1060"
}

group = project.projectDir.name.toLowerCase()
archivesBaseName = project.projectDir.name + "-mc" + project.minecraft.version

sourceSets.main{
    java {
		srcDirs 'java', 'apis', 'EvalEx/src' //set the source folder as the /src subfolder
	}
    resources {
		srcDirs 'resources' //set the resources folder as the /resources subfolder
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: '*.jar,*.zip')
}

// variable replacement in source files
task processSourcesCustom(type:Copy){
	from('java')
	{
		include '**/ModInfo.java'

		expand 'version':project.version, 'mcversion':project.minecraft.version
	}
	into project.buildDir.getPath()+"/sources/java"
}

task copyEvalExLicense(type:Copy){
	from('EvalEx')
	{
		include 'LICENSE'
	}
	into sourceSets.main.output.resourcesDir.getPath()+"/com/udojava/evalex"
}

// delete mcmod.info so that it gets a fresh version copied in every time
task cleanModInfo(type: Delete) {
	delete file(sourceSets.main.output.resourcesDir.getPath()+"/mcmod.info")
}

// correct task ordering
processResources.dependsOn copyEvalExLicense
processResources.dependsOn cleanModInfo
compileJava.dependsOn processSourcesCustom
afterEvaluate { project ->
	processSourcesCustom.shouldRunAfter(sourceMainJava)
}

// Add Coremod Manifest
jar {
    manifest {
        attributes 'FMLCorePlugin': 'squeek.spiceoflife.asm.ASMPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'example/**.json'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'example/**.json'
    }
}